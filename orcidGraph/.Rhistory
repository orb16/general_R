require(rorcid)
install.packages("rorcid")
require(igraph)
require(visNetwork)
myWorks <- works( "0000-0001-7719-6695")
require(rorcid)
myWorks <- works( "0000-0001-7719-6695")
myWorks
ids <- identifiers(myWorks)
ids
firstID <- orcid_doi(ids[1])
firstID
itemRecord <- firstID
itemRecord[[1]]$`orcid-identifier.uri`
thisAuthor <- "0000-0001-7719-6695"
allAuthors[!grep(thisAuthor)]
allAuthors <- itemRecord[[1]]$`orcid-identifier.uri`
thisAuthor <- "0000-0001-7719-6695"
allAuthors[!grep(thisAuthor)]
allAuthors[!grep(thisAuthor, allAuthors)]
allAuthors[!grep(thisAuthor, fixed = TRUE, allAuthors)]
allAuthors
thisAuthor
allAuthors
grep(thisAuthor, fixed = TRUE, allAuthors)
allAuthors
grep("orcid", allAuthors)
allAuthors[!grepl(thisAuthor, fixed = TRUE, allAuthors)]
otherAuthor <- allAuthors[!grepl(thisAuthor, fixed = TRUE, allAuthors)]
itemRecord
View(itemRecord)
data.frame(otherAuthor, x)
tmp <- sapply(ids, function(x){
itemRecord <- orcid_doi(x)
allAuthors <- itemRecord[[1]]$`orcid-identifier.uri`
thisAuthor <- "0000-0001-7719-6695"
otherAuthor <- allAuthors[!grepl(thisAuthor, fixed = TRUE, allAuthors)]
return(data.frame(otherAuthor, x))
})
ids
x <- ids[1]
itemRecord <- orcid_doi(x)
itemRecord
allAuthors <- itemRecord[[1]]$`orcid-identifier.uri`
thisAuthor <- "0000-0001-7719-6695"
otherAuthor <- allAuthors[!grepl(thisAuthor, fixed = TRUE, allAuthors)]
otherAuthor
ret <- data.frame(otherAuthor, x)
ret
x <- ids[2]
itemRecord <- orcid_doi(x)
allAuthors <- itemRecord[[1]]$`orcid-identifier.uri`
thisAuthor <- "0000-0001-7719-6695"
otherAuthor <- allAuthors[!grepl(thisAuthor, fixed = TRUE, allAuthors)]
otherAuthor
allAuthors
ret <- data.frame(otherAuthor, manuscript = x)
ret
x <- ids[3]
itemRecord <- orcid_doi(x)
allAuthors <- itemRecord[[1]]$`orcid-identifier.uri`
thisAuthor <- "0000-0001-7719-6695"
allAuthors
otherAuthor <- allAuthors[!grepl(thisAuthor, fixed = TRUE, allAuthors)]
otherAuthor
is.null(otherAuthor)
length(otherAuthor)
ret <- data.frame(otherAuthor = "none", manuscript = x)
if(length(otherAuthor) > 0){
ret <- data.frame(otherAuthor, manuscript = x)
}else{
ret <- data.frame(otherAuthor = "none", manuscript = x)
}
ret
tmp <- sapply(ids, function(x){
itemRecord <- orcid_doi(x)
allAuthors <- itemRecord[[1]]$`orcid-identifier.uri`
thisAuthor <- "0000-0001-7719-6695"
otherAuthor <- allAuthors[!grepl(thisAuthor, fixed = TRUE, allAuthors)]
if(length(otherAuthor) > 0){
ret <- data.frame(otherAuthor, manuscript = x)
}else{
ret <- data.frame(otherAuthor = "noCoAuthors", manuscript = x)
}
return(ret)
})
tmp
?sapply
tmp <- sapply(ids, simplify = FALSE, function(x){
itemRecord <- orcid_doi(x)
allAuthors <- itemRecord[[1]]$`orcid-identifier.uri`
thisAuthor <- "0000-0001-7719-6695"
otherAuthor <- allAuthors[!grepl(thisAuthor, fixed = TRUE, allAuthors)]
if(length(otherAuthor) > 0){
ret <- data.frame(otherAuthor, manuscript = x)
}else{
ret <- data.frame(otherAuthor = "noCoAuthors", manuscript = x)
}
return(ret)
})
tmp
bind_rows(tmp)
require(tidyverse)
bind_rows(tmp)
tmp
tmp[[1]]
x <- tmp[[1]]
NumCoAuthors <- length(x$otherAuthor)
NumCoAuthors
coAuthors <- x$otherAuthor
i = 1
thisCoAuthor <- coAuthors[i]
thisCoAuthor
thisCoAuthor <- as.character(coAuthors[i])
thisCoAuthor
coAuthWorks <- works(thisCoAuthor)
thisCoAuthor
ids
allAuthors
itemRecord[[1]]
ids
x <- ids[1]
itemRecord <- orcid_doi(x)
allAuthors <- itemRecord[[1]]$`orcid-identifier.uri`
allAuthors
itemRecord[[1]]
works("0000-0002-5398-2293")
tmp <- sapply(ids, simplify = FALSE, function(x){
itemRecord <- orcid_doi(x)
allAuthors <- itemRecord[[1]]$`orcid-identifier.path`
thisAuthor <- "0000-0001-7719-6695"
otherAuthor <- allAuthors[!grepl(thisAuthor, fixed = TRUE, allAuthors)]
if(length(otherAuthor) > 0){
ret <- data.frame(otherAuthor, manuscript = x)
}else{
ret <- data.frame(otherAuthor = "noCoAuthors", manuscript = x)
}
return(ret)
})
thisCoAuthor <- as.character(coAuthors[i])
coAuthWorks <- works(thisCoAuthor)
x <- tmp
NumCoAuthors <- length(x$otherAuthor)
coAuthors <- x$otherAuthor
coAuthors
x
tmp
x <- tmp[[1]]
NumCoAuthors <- length(x$otherAuthor)
coAuthors <- x$otherAuthor
NumCoAuthors
i = 1
thisCoAuthor <- as.character(coAuthors[i])
coAuthWorks <- works(thisCoAuthor)
coAuthorsCOAUTHORS <- identifiers(coAuthWorks)
coAuthorsCOAUTHORS
ids
coAuthorsCOAUTHORS <- sapply(coAuthWorksIDs, simplify = FALSE, function(x){
itemRecord <- orcid_doi(x)
allAuthors <- itemRecord[[1]]$`orcid-identifier.path`
thisAuthor <- "0000-0001-7719-6695"
otherAuthor <- allAuthors[!grepl(thisAuthor, fixed = TRUE, allAuthors)]
if(length(otherAuthor) > 0){
ret <- data.frame(otherAuthor, manuscript = x)
}else{
ret <- data.frame(otherAuthor = "noCoAuthors", manuscript = x)
}
return(bind_rows(ret))
})
coAuthWorksIDs <- identifiers(coAuthWorks)
coAuthorsCOAUTHORS <- sapply(coAuthWorksIDs, simplify = FALSE, function(x){
itemRecord <- orcid_doi(x)
allAuthors <- itemRecord[[1]]$`orcid-identifier.path`
thisAuthor <- "0000-0001-7719-6695"
otherAuthor <- allAuthors[!grepl(thisAuthor, fixed = TRUE, allAuthors)]
if(length(otherAuthor) > 0){
ret <- data.frame(otherAuthor, manuscript = x)
}else{
ret <- data.frame(otherAuthor = "noCoAuthors", manuscript = x)
}
return(bind_rows(ret))
})
coAuthorsCOAUTHORS
class(coAuthorsCOAUTHORS)
bind_rows(coAuthorsCOAUTHORS)
coAuthorsCOAUTHORSdf <- bind_rows(coAuthorsCOAUTHORS)
coAuthorsCOAUTHORSdf
?graph_from_data_frame
actors <- data.frame(name=c("Alice", "Bob", "Cecil", "David",
"Esmeralda"),
age=c(48,33,45,34,21),
gender=c("F","M","F","M","F"))
relations <- data.frame(from=c("Bob", "Cecil", "Cecil", "David",
"David", "Esmeralda"),
to=c("Alice", "Bob", "Alice", "Alice", "Bob", "Alice"),
same.dept=c(FALSE,FALSE,TRUE,FALSE,FALSE,TRUE),
friendship=c(4,5,5,2,1,1), advice=c(4,5,5,4,2,3))
relations
coAuthorsCOAUTHORSdf$from <- thisCoAuthor
coAuthorsCOAUTHORSdf
thePeople <- as.character(c(unique(coAuthorsCOAUTHORSdf$otherAuthor), thisCoAuthor))
thePeople
thePeople <- data.frame(allAuthors <- as.character(c(unique(coAuthorsCOAUTHORSdf$otherAuthor), thisCoAuthor)))
thePeople
thePeople <- data.frame(allAuthors = as.character(c(unique(coAuthorsCOAUTHORSdf$otherAuthor), thisCoAuthor)))
thePeople
names(coAuthorsCOAUTHORSdf)
names(coAuthorsCOAUTHORSdf)[grepl("otherAuthor", names(coAuthorsCOAUTHORSdf))] <- "to"
tmpGraph <- graph_from_data_frame(coAuthorsCOAUTHORSdf,
directed = FALSE,
vertices = thePeople)
thePeople
thePeople %>% group_by(allAuthors) %>% summarise(nobs = n())
thePeople %>% group_by(allAuthors) %>% summarise(nobs = n()) %>%
filter(nobs > 1)
thisCoAuthor
thePeople <- data.frame(allAuthors = as.character(c(unique(coAuthorsCOAUTHORSdf$otherAuthor))))
tmpGraph <- graph_from_data_frame(coAuthorsCOAUTHORSdf,
directed = FALSE,
vertices = thePeople)
thePeople <- data.frame(allAuthors = as.character(unique(c(coAuthorsCOAUTHORSdf$otherAuthor, thisCoAuthor))))
tmpGraph <- graph_from_data_frame(coAuthorsCOAUTHORSdf,
directed = FALSE,
vertices = thePeople)
thePeople
as.character(unique(c(coAuthorsCOAUTHORSdf$otherAuthor, thisCoAuthor)
)
)
thePeople <- data.frame(allAuthors = as.character(unique(c(coAuthorsCOAUTHORSdf$to, thisCoAuthor))))
thePeople
tmpGraph <- graph_from_data_frame(coAuthorsCOAUTHORSdf,
directed = FALSE,
vertices = thePeople)
coAuthorsCOAUTHORSdf$to
coAuthorsCOAUTHORSdf
tmpGraph <- graph_from_data_frame(coAuthorsCOAUTHORSdf,
directed = FALSE)
tmpGraph
plot(tmpGraph)
g <- graph_from_data_frame(relations, directed=TRUE, vertices=actors)
print(g, e=TRUE, v=TRUE)
plot(g)
coAuthorsCOAUTHORSdf
tmppAdj <- as_adj(tmpGraph)
tmppAdj
plot(tmppAdj)
